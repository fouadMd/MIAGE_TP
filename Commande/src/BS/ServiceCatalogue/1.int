ROUTINE BS.ServiceCatalogue.1 [Type=INT,Generated]
 ;BS.ServiceCatalogue.1
 ;Generated for class BS.ServiceCatalogue.  Do NOT edit. 11/14/2021 06:58:16PM
 ;;5A775374;BS.ServiceCatalogue
 ;
zGetCatalogue(pInput,pOutput) public {
    set tsc = ..SendRequestSync("Catalogue",pInput,.pOutput)
    Quit 1 }
zGetSettingRow(pSettingName="",pSourceClass="") public {
	Set tRow = ""
	// Check if the class has been compiled with the new generator
	If (pSourceClass = "BS.ServiceCatalogue") {
		Set tRow = $case(pSettingName,
			"AlertGracePeriod": $LB("AlertGracePeriod","When AlertOnError is True, refrain from alerting if it is not from ProcessInput() and the Service succeeds again within this number of seconds","%Library.Numeric",0,"",0,"","","",0,"Alert Grace Period","Alerting","Alerting Control",""),
			"AlertGroups": $LB("AlertGroups","The Alert Groups to which this item belongs.","%Library.String","",2500,"","","","",0,"Alert Groups","Alerting","Alerting Control","selector?multiSelect=1&context={Ens.ContextSearch/ProductionAlertGroups?productionName=@productionId}"),
			"AlertOnError": $LB("AlertOnError","Send an Alert message whenever an error occurs here","%Library.Boolean",0,"","","","","",0,"Alert On Error","Alerting","Alerting Control",""),
			"ArchiveIO": $LB("ArchiveIO","If set, the Adapter will log in the InterSystems IRIS I/O archive each input and output communication it has with its external system.","%Library.Boolean",0,"","","","","",0,"Archive IO","Dev","Development and Debugging",""),
			"BusinessPartner": $LB("BusinessPartner","Name of a Business Partner Profile associated with this item","%Library.String","",128,"","","","",0,"Business Partner","Info","Informational Settings","partnerSelector"),
			"GenerateSuperSessionID": $LB("GenerateSuperSessionID","If this setting is enabled then generate a Super Session ID.<br>"_$char(13,10)_"See method GenerateSuperSession() and user call back method OnGenerateSuperSession()in <CLASS>Ens.Host</CLASS> ","%Library.Boolean",0,"","","","","",0,"Generate SuperSession ID","Additional","Additional Settings",""),
			"InactivityTimeout": $LB("InactivityTimeout","Send an Alert message if this number of seconds elapses with no messages being processed by this item. <br/>"_$char(13,10)_"Note that this alert will be sent even if AlertOnError is False. <br/>"_$char(13,10)_"Zero means no alerts of this type will be sent.","%Library.Numeric",0,"",0,"","","",0,"Inactivity Timeout","Alerting","Alerting Control",""),
			"ThrottleDelay": $LB("ThrottleDelay","Duration of forced idleness before processing the next message, in milliseconds","%Library.Numeric",0,"",0,"","","",0,"Throttle Delay","Additional","Additional Settings",""),
			: "")
	}
	Else { // Fall back on getting the data dynamically 
		Set tRow = ..GetDynamicSettingRow(pSettingName,pSourceClass)
	}
	Quit tRow }
zOnProcessInput(pInput,pOutput,pHint) public {
    set tsc = $CASE(pHint,
        "GetCatalogue":..GetCatalogue(pInput,.pOutput),
	 	: $$Error^%apiOBJ(5003)
    )
    Quit tsc }
zEnumerateSettingsGetInfo(colinfo,parminfo,idinfo,qHandle,extoption=0,extinfo) public {
	Set colinfo=$lb($lb("Name",10,"Name"),$lb("Description",10,"Description"),$lb("Type",10,"Type"),$lb("Default",10,"Default"),$lb("MAXLEN",10,"MAXLEN"),$lb("MINVAL",10,"MINVAL"),$lb("MAXVAL",10,"MAXVAL"),$lb("VALUELIST",10,"VALUELIST"),$lb("DISPLAYLIST",10,"DISPLAYLIST"),$lb("IsRequired",10,"IsRequired"),$lb("LocalizedName",10,"LocalizedName"),$lb("Category",10,"Category"),$lb("LocalizedCategory",10,"LocalizedCategory"),$lb("EditorContext",10,"EditorContext"))
	Set parminfo=""
	Set idinfo=$lb(0,"")
	If extoption {
		Set extinfo=$lb("",$lb($lb("",""),$lb("",""),$lb("",""),$lb("",""),$lb("",""),$lb("",""),$lb("",""),$lb("",""),$lb("",""),$lb("",""),$lb("",""),$lb("",""),$lb("",""),$lb("","")))
	}
	Quit 1 }
zEnumerateSettingsGetODBCInfo(colinfo,parminfo,qHandle) public {
	Set metadata=$lb(1,14,"Name",12,50,0,2,"Name","ServiceCatalogue","BS","",$c(0,0,0,0,0,0,0,0,0,0,0,0,0),"Description",12,50,0,2,"Description","ServiceCatalogue","BS","",$c(0,0,0,0,0,0,0,0,0,0,0,0,0),"Type",12,50,0,2,"Type","ServiceCatalogue","BS","",$c(0,0,0,0,0,0,0,0,0,0,0,0,0),"Default",12,50,0,2,"Default","ServiceCatalogue","BS","",$c(0,0,0,0,0,0,0,0,0,0,0,0,0),"MAXLEN",12,50,0,2,"MAXLEN","ServiceCatalogue","BS","",$c(0,0,0,0,0,0,0,0,0,0,0,0,0),"MINVAL",12,50,0,2,"MINVAL","ServiceCatalogue","BS","",$c(0,0,0,0,0,0,0,0,0,0,0,0,0),"MAXVAL",12,50,0,2,"MAXVAL","ServiceCatalogue","BS","",$c(0,0,0,0,0,0,0,0,0,0,0,0,0),"VALUELIST",12,50,0,2,"VALUELIST","ServiceCatalogue","BS","",$c(0,0,0,0,0,0,0,0,0,0,0,0,0),"DISPLAYLIST",12,50,0,2,"DISPLAYLIST","ServiceCatalogue","BS","",$c(0,0,0,0,0,0,0,0,0,0,0,0,0),"IsRequired",12,50,0,2,"IsRequired","ServiceCatalogue","BS","",$c(0,0,0,0,0,0,0,0,0,0,0,0,0),"LocalizedName",12,50,0,2,"LocalizedName","ServiceCatalogue","BS","",$c(0,0,0,0,0,0,0,0,0,0,0,0,0),"Category",12,50,0,2,"Category","ServiceCatalogue","BS","",$c(0,0,0,0,0,0,0,0,0,0,0,0,0),"LocalizedCategory",12,50,0,2,"LocalizedCategory","ServiceCatalogue","BS","",$c(0,0,0,0,0,0,0,0,0,0,0,0,0),"EditorContext",12,50,0,2,"EditorContext","ServiceCatalogue","BS","",$c(0,0,0,0,0,0,0,0,0,0,0,0,0),0)
	Set colcount=$li(metadata,2),cmdlen=colcount*10,parmcount=$li(metadata,3+cmdlen),pmdlen=parmcount*6,parminfo=$li(metadata,cmdlen+3,cmdlen+pmdlen+3)
	Set colinfo=$li(metadata,2,2+cmdlen)
	Quit 1 }